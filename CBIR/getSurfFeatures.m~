%% load all IRMA training and testing images:
trainPath = '../../IRMA/2009/Training Data/ImageCLEFmed2009_train.02/';
path = sprintf('%s*.png', trainPath);
files = dir(path);

testPath = '../../IRMA/2009/Testing Data/';
path = sprintf('%s*.png', testPath);
testFiles = dir(path);

%append all test files to the list of training files, keeping track of the 
%end of the training files to distinguish them later:
trainingLength = length(files);
files = vertcat(files, testFiles);

i=1;
for file = files'
   %add path for either training or testing folder, depending on file:
   if (i <= trainingLength)
       imgpath = sprintf('%s/%s', trainPath, file.name);
   else
       imgpath = sprintf('%s/%s', testPath, file.name);
   end
   irma{i} = imread(imgpath);
   
   %any 3-channel images seem to be the same for all colour channels, so we
   %can just remove all but channel 1:
   if (length(irma{i}(1,1,:)) == 3)
       irma{i}(:,:,2:3) = [];
   end
   %TODO: filter the 3-channel greyscale images to 1-channel, and make sure
    %nothing is actually colour, or we'll need to handle that differently
   
   i = i+1;
end

%% calculate SURF features for them (using a low enough threshold to guarantee a min number of features to use)
features = cell(1, length(files));
strongestfeatures = cell(length(files), 1);
parfor i=1:length(files)
   features{i} = detectSURFFeatures(irma{i}, 'MetricThreshold', 200);
   strongestfeatures{i}=features{i}.selectStrongest(10);

   fprintf('Calculating features for %d \n', i);
end

%%

saveSURFtoFile('trainingFeatures.txt', strongestfeatures(1:trainingLength));
saveSURFtoFile('testingFeatures.txt', strongestfeatures(trainingLength+1:end));
%%


%calculate radon barcodes (RBCs) from each image 
i=1;
for file = files'
    barcode{i} = extractRBC(irma{i}, 32, 32, 8, false);
    i=i+1;
    fprintf('Extracting barcodes for image %d \r', i); 
end

